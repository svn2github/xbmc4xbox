AR=ar
ARFLAGS=rus
RM=rm -f
abs_top_srcdir=@abs_top_srcdir@
prefix=@prefix@
CXX=@CXX@
CC=@CC@
CFLAGS+=@DEBUG_FLAGS@
CFLAGS+=@LZO_INCLUDES@
INCLUDES+=@INCLUDES@
DEFINES+=-D_LINUX -D_FILE_DEFINED -D_REENTRANT -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 @SDL_DEFINES@ -DINSTALL_PATH="\"@prefix@/share/xbmc\"" @ARCH_DEFINES@
ARCH=@ARCH@

.cpp.o:
	@rm -f ${<:.cpp=.o}
	$(CXX) -MD -c $(CFLAGS) $(DEFINES) $(INCLUDES) $< -o ${<:.cpp=.o}
	@cp $*.d $*.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	      -e '/^$$/ d' -e 's/$$/ :/' < $*.d >> $*.P; \
	  rm -f $*.d

.cc.o:
	@rm -f ${<:.cc=.o}
	$(CXX) -MD -c $(CFLAGS) $(DEFINES) $(INCLUDES) $< -o ${<:.cc=.o}
	@cp $*.d $*.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	      -e '/^$$/ d' -e 's/$$/ :/' < $*.d >> $*.P; \
	  rm -f $*.d

.c.o:
	@rm -f ${<:.c=.o}
	$(CC) -MD -c $(CFLAGS) $(DEFINES) $(INCLUDES) $< -o ${<:.c=.o}
	@cp $*.d $*.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	      -e '/^$$/ d' -e 's/$$/ :/' < $*.d >> $*.P; \
	  rm -f $*.d

.C.o:
	@rm -f ${<:.C=.o}
	$(CC) -MD -c $(CFLAGS) $(DEFINES) $(INCLUDES) $< -o ${<:.C=.o}
	@cp $*.d $*.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	      -e '/^$$/ d' -e 's/$$/ :/' < $*.d >> $*.P; \
	  rm -f $*.d

.S.o:
	rm -f ${<:.S=.o}
	$(CC) -c $(CFLAGS) $(DEFINES) $(INCLUDES) $< -o ${<:.S=.o}

%.h.gch : %.h
	$(CXX) -c $(CFLAGS) $(DEFINES) $(INCLUDES) $< -o $@

OBJS+=$(filter %.o,$(SRCS:.cpp=.o))
OBJS+=$(filter %.o,$(SRCS:.c=.o))
OBJS+=$(filter %.o,$(SRCS:.S=.o))

.PHONY : lib pch clean 

lib: $(OBJS)

pch: $(PCH:.h=.h.gch)
	for d in $(DIRS); do (cd $$d; $(MAKE) pch ); done

clean: 
	$(RM) $(OBJS) $(LIB) $(PCH:.h=.h.gch) $(OBJS:.o=.P)
	for d in $(DIRS); do (if test -f $$d/Makefile; then ($(MAKE) -C $$d clean); fi ); done

distclean: clean
	@echo "Removing all object files (.o)"
	@find . -name "*.o" -exec echo 'Removing "{}"' \; -exec rm -f "{}" \;
	@echo "Removing all dependency files (.P)"
	@find . -name "*.P" -exec echo 'Removing "{}"' \; -exec rm -f "{}" \;
	@echo "Done."
	for d in $(DIRS); do (if test -f $$d/Makefile; then ($(MAKE) -C $$d distclean); fi ); done
