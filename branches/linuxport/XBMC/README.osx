TOC
1. Introduction
2. Getting the source code
3. Installing the required MacPorts packages
	3.1 Option A, Install pre-built MacPort packages
	3.2 Option B, Install MacPorts
4. How to compile and run
	4.1 Using XCode
	4.2 Using Command line

-----------------------------------------------------------------------------
1. Introduction
-----------------------------------------------------------------------------

This is a platform port of XBMC for the Apple OSX operating system. Both 10.5
and 10.4 Intel platforms are supported. The current build system is Xcode 2.5
or Xcode 3.x. There are two ways to build XBMC for Mac. 1) command-line or
2) Xcode. Generally, Xcode is the easiest as it presents the build system
in a GUI environment.

XBMC for Mac is composed of a main binary with numerous dynamic libraries and
codecs that support a multitude of music and video formats.

NOTE TO NEW OS X USERS: All lines that are prefixed with the '$' character are
commands that need to be typed into a Terminal window. Note that the '$' 
character itself should NOT be typed as part of the command.


-----------------------------------------------------------------------------
2. Getting the source code
-----------------------------------------------------------------------------

 $ cd $HOME
 $ svn checkout https://xbmc.svn.sourceforge.net/svnroot/xbmc/branches/linuxport/XBMC

-----------------------------------------------------------------------------
3.0 Installing the required MacPorts packages
-----------------------------------------------------------------------------
Install Xcode 3.x. You can download it from Apple's site after registration at
(http://developer.apple.com/tools/download). You also need to install the 10.4
sdk.

it is important to make sure that any libs are also built using 10.4 sdk refs. 
While it is possible to build using MacPorts 1.7.0 to 10.4 sdk on a 10.5 system,
it is easer to just install the pre-built packages.

The pre-built MacPort packages can be download using the following URL: 

http://downloads.sourceforge.net/xbmc/MacPorts-mpkgs-1.1.zip 

These libs are built to 10.4 sdk. You can still use MacPorts but the resulting 
binary will only run under 10.5 if built under 10.5. 

-----------------------------------------------------------------------------
3.1 Option A, Install the pre-built MacPort packages
-----------------------------------------------------------------------------
Completly a previous install of MacPorts, enter the following from a terminal
windows:

 $ sudo rm -rf \
    /opt/local \
    /etc/manpaths.d/macports \
    /etc/paths.d/macports \
    /Applications/DarwinPorts \
    /Applications/MacPorts \
    /Library/LaunchDaemons/org.macports.* \
    /Library/Receipts/DarwinPorts*.pkg \
    /Library/Receipts/MacPorts*.pkg \
    /Library/StartupItems/DarwinPortsStartup \
    /Library/Tcl/darwinports1.0 \
    /Library/Tcl/macports1.0

Download MacPorts-mpkgs-1.1.zip, unzip and install all packages.

-----------------------------------------------------------------------------
3.2 Option B, Install MacPorts
-----------------------------------------------------------------------------
Install MacPorts (http://www.macports.org/). then install the following
packages from the Terminal window:

 $ sudo port install lzo
 $ sudo port install glew
 $ sudo port install pcre
 $ sudo port install bzip2
 $ sudo port install boost
 $ sudo port install libogg
 $ sudo port install libmad
 $ sudo port install libvorbis
 $ sudo port install mysql5
 $ sudo port install fribidi
 $ sudo port install libiconv
 $ sudo port install freetype
 $ sudo port install readline
 $ sudo port install portaudio
 $ sudo port install fontconfig

You will need to use samba3 version 3.0.28a so follow these instructions to setup 
MacPorts for a local dport repository:

(http://journal.bitshaker.com/articles/2007/10/20/install-old-versions-of-ports-using-macports/)

We will install the revision 34870 (version 3.0.28a). Edit /opt/local/etc/macports/sources.confand add "file:///Users/Shared/dports" BEFORE "rsync.macports.org".

Then:

 $ sudo mkdir /Users/Shared/dports
 $ cd /Users/Shared/dports
 $ svn co --revision 34870 http://svn.macports.org/repository/macports/trunk/dports/net/samba3 net/samba3
 $ sudo portindex /Users/Shared/dports
 $ port list samba3 (in order to check if the new samba3 is listed)
 $ sudo port uninstall samba3 (if installed)
 $ sudo port clean samba3
 $ sudo port install samba3@3.0.28a +darwin_8

Fix two MacPorts package default install locations with sym links:

 $ sudo ln -s /opt/local/include/mysql5/mysql/ /opt/local/include/mysql
 $ sudo ln -s /opt/local/Library/Frameworks/Python.framework/Versions/2.4/include/python2.4 /opt/local/include/python2.4

Important Note:
In MacPorts, building +universal on 10.5 won't let you run it on 10.4. You need
to take the extra step of setting the sysroot to be the 10.4u SDK. Edit 
"/opt/local/etc/macports/macports.conf" and change the universal_sysroot line
(or add a new one if it's not present) to:

universal_sysroot /Developer/SDKs/MacOSX10.4u.sdk

Also some MacPort packages marked 'universal_variant no' will need the CFLAGS,
CXXFLAGS, and LDFLAGS changed with the addition of:

-isysroot /Developer/SDKs/MacOSX10.4u.sdk

-----------------------------------------------------------------------------
4. How to compile
-----------------------------------------------------------------------------
Both Xcode and Terminal compilation require that build environment be setup 
first. This is a simple step and involves the following:

 $ cd $HOME/XBMC
 $ autoconf
 $ ./configure

The configure operation will setup the build environment for codecs and
internal libraries that are used by XBMC. This step is required for both Xcode
and command-line building.

-----------------------------------------------------------------------------
4.1 Using Xcode
-----------------------------------------------------------------------------
Start XCode and open the XBMC project (XBMC.xcodeproj) located in $HOME/XBMC.
For development, XBMC is run from the $HOME/XBMC directory and needs to have
the XBMC_HOME environment variable set to know where that directory is located.
To set XBMC_HOME environment variable:

Menu -> Project -> Edit Active Executable "XBMC", click "Arguments" tab and
add "XBMC_HOME" as an enviroment variable. Set the value to the path to the 
XBMC root folder. For example, "/Users/bigdog/Documents/XBMC"

There are two build targets "XBMC" and "XBMC.app" with debug and release
settings. The "XBMC" target is used for rapid build and debug cycles while
the "XBMC.app" target is used to build a self contained OSX application.

Set the build target to "XBMC" or "XBMC.app", then build. The build process
will take a long time when builting the first time. You can see the progress
in "Build Results". There are a large number of static and dynamic libaries
that will need to be built. Once these are built, subsequent builds will be
faster.

After the build, you can ether run XBMC for Mac from Xcode or run it from 
the command-line. If you run it from the command-line, make sure your set
the XBMC_HOME environment variable (export XBMC_HOME=$HOME/XBMC). Then, to
run the debug version:

$ ./build/Debug/XBMC

Or the release version:

$ ./build/Release/XBMC 

You can also build via Xcode from the command-line using the following:

$ xcodebuild -parallelizeTargets -configuration Debug -project XBMC.xcodeproj

You can specify "Release" instead of "Debug" as a configuration.

-----------------------------------------------------------------------------
4.3 Using Terminal (command-line)
-----------------------------------------------------------------------------
 $ cd $HOME/XBMC
 $ make
 $ make XBMC.app

