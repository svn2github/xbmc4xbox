TOC
1. Introduction
2. Getting the source code
3. Installing the required Ubuntu packages
4. How to compile
5. How to run
6. Uninstalling
7. Endword

-----------------------------------------------------------------------------
1. Introduction
-----------------------------------------------------------------------------

We currently recommend Ubuntu Hardy(8.04) or Intrepid(8.10). A gfx-adapter
with OpenGL acceleration is highly recommended and 24/32 bitdepth is 
required with OpenGL.

NOTE TO NEW LINUX USERS: All lines that are prefixed with the '#'
character are commands that need to be typed into a terminal window /
console (similar to the command prompt for Windows). Note that the '#'
character itself should NOT be typed as part of the command.


-----------------------------------------------------------------------------
2. Getting the source code
-----------------------------------------------------------------------------

   # sudo apt-get install subversion
   # cd $HOME
   # svn checkout https://xbmc.svn.sourceforge.net/svnroot/xbmc/branches/linuxport/XBMC

-----------------------------------------------------------------------------
3. Installing the required Ubuntu packages
-----------------------------------------------------------------------------

Two methods exist to install the required Ubuntu packages :

--------------------------------------------------------------------
3.1. Copy and paste the following line corresponding to your system
--------------------------------------------------------------------

For Ubuntu (all versions >= 7.04):

   # sudo apt-get install subversion make g++ gcc gawk pmount libtool nasm automake cmake gperf unzip bison libsdl-dev libsdl-image1.2-dev libsdl-gfx1.2-dev libsdl-mixer1.2-dev libsdl-sound1.2-dev libsdl-stretch-dev libfribidi-dev liblzo-dev libfreetype6-dev libsqlite3-dev libogg-dev libasound-dev python-sqlite libglew-dev libcurl4-dev x11proto-xinerama-dev libxinerama-dev libxrandr-dev libxrender-dev libmad0-dev libogg-dev libvorbis-dev libmysqlclient-dev libpcre3-dev libdbus-1-dev libhal-dev libhal-storage-dev libjasper-dev libfontconfig-dev libbz2-dev libboost-dev libfaac-dev libenca-dev libxt-dev libxmu-dev libpng-dev libjpeg-dev libpulse-dev mesa-utils libcdio-dev libsamplerate-dev libmms-dev

--------------------------------------------------------------
3.2. Use a single command to get all build dependencies
--------------------------------------------------------------

For this, you need to specify the PPA in your apt sources. Please find them on the forum

http://xbmc.org/forum/showthread.php?t=33327

Update apt :
   # sudo apt-get update

Here is the magic command to get the build dependencies (used to compile the version on the PPA).
   #  sudo apt-get build-dep xbmc



*** For developers and anyone else who compiles frequently it is recommended to use ccache
sudo apt-get install ccache

*** A tip for those with multiple computers at home is to check out distcc (totally unsupported from xbmc ofcourse)
sudo apt-get install distcc

-----------------------------------------------------------------------------
4. How to compile
-----------------------------------------------------------------------------

To create the XBMC executable manually perform these two steps:

.1  # ./configure <option1> <option2> <etc>

These configure options exist:
  --enable-debug          enable debugging information (default is yes)       
  --enable-optimizations  enable optimization (default is yes)                
  --enable-gl             enable OpenGL rendering (default is yes)            
  --enable-vdpau          enable VDPAU decoding (default is yes if vdpau installed)
  --enable-profiling      enable gprof profiling (default is no)
  --enable-joystick       enable SDL joystick support (default is yes)
  --enable-xrandr         enable XRandR support (default is yes)
  --enable-ccache         enable building with ccache feature (default is yes
                          if ccache is installed)
  --enable-pulse          enable PulseAudio support (default is yes)
  --enable-faac           enable FAAC support (default is yes)
  --enable-dvdcss         enable DVDCSS support (default is yes)
  --enable-mid            enable MID support (default is no)
  --disable-avahi         disable Avahi support (default is enabled if libavahi-common and libavahi-client is found)

.2  # make

Tip: by adding -j<number> to the make command, you describe how many
     concurrent jobs will be used. So for dualcore the command is: 

    # make -j2

.3  # make install  

This will install XBMC in the prefix provided in 4.1 as well as a launcher script.

NOTE: You may need to run this with sudo (sudo make install) if your user
doesn't have write permissions to the prefix you have provided (as in the
default case, /usr/local).

-----------------------------------------------------------------------------
5. How to run
-----------------------------------------------------------------------------
You can now run xbmc by issuing the command "xbmc" in a terminal. You should 
NEVER run xbmc.bin directly as this will not have platform mode enabled and 
hence xbmc will not have write access to its home directory (ie. it will 
probably crash).

If you wish to use VDPAU decoding you will now have to change the Render Method
in Settings->Videos->Player from "Auto Detect" to "VDPAU".

-----------------------------------------------------------------------------
6. Uninstalling
-----------------------------------------------------------------------------
Issue "make uninstall"  ("sudo make uninstall" if you user doesn't have write
permission to the install directory) from your source tree.  If you would like
to also remove any settings and 3rd party addons (skins, scripts, etc) you 
should also run "rm -rf ~/.xbmc/".

NOTE: If you have rerun configure with a different prefix, you will need to
rerun configure with the correct prefix for this step to work correctly.

-----------------------------------------------------------------------------
7. Endword
-----------------------------------------------------------------------------

Have fun!

EOF

