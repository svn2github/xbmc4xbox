DIRS=	\
	guilib \
	guilib/common \
	guilib/tinyXML \
	tools/EventClients \
	tools/XBMCTex \
	xbmc \
	xbmc/cdrip \
	xbmc/cores \
	xbmc/cores/DllLoader \
	xbmc/cores/DllLoader/exports \
	xbmc/cores/DllLoader/exports/util \
	xbmc/cores/dvdplayer \
	xbmc/cores/dvdplayer/Codecs \
	xbmc/cores/paplayer \
	xbmc/cores/paplayer/AC3Codec \
	xbmc/cores/paplayer/ADPCMCodec \
	xbmc/cores/paplayer/AACCodec \
	xbmc/cores/paplayer/CubeCodec \
	xbmc/cores/paplayer/NSFCodec \
	xbmc/cores/paplayer/MIDCodec \
	xbmc/cores/paplayer/SIDCodec \
	xbmc/cores/paplayer/WavPackCodec \
	xbmc/cores/paplayer/GYMCodec \
	xbmc/cores/paplayer/DCACodec \
	xbmc/cores/paplayer/YMCodec/StSoundLibrary \
	xbmc/cores/paplayer/ModuleCodec/vc6/dumb \
	xbmc/cores/paplayer/MPCCodec/xbmc \
	xbmc/cores/paplayer/SPCCodec/SNES/SNESAPU \
	xbmc/cores/paplayer/MP3Codec \
	xbmc/cores/paplayer/flac-1.2.1/ \
	xbmc/cores/paplayer/MACDll \
	xbmc/cores/paplayer/vorbisfile \
	xbmc/cores/VideoRenderers \
	xbmc/cores/VideoRenderers/VideoShaders \
	xbmc/FileSystem \
	xbmc/FileSystem/MusicDatabaseDirectory \
	xbmc/FileSystem/VideoDatabaseDirectory \
	xbmc/lib/cximage-6.0 \
	xbmc/lib/libass/xbmc \
	xbmc/lib/libcmyth \
	xbmc/lib/libexif \
	xbmc/lib/libGoAhead \
	xbmc/lib/libhdhomerun \
	xbmc/lib/libid3tag \
	xbmc/lib/libPython \
	xbmc/lib/libPython/linux \
	xbmc/lib/libPython/xbmcmodule \
	xbmc/lib/libRTMP \
	xbmc/lib/libRTV \
	xbmc/lib/libscrobbler \
	xbmc/lib/libshout \
	xbmc/lib/libUPnP \
	xbmc/lib/libXBMS \
	xbmc/lib/libXDAAP \
	xbmc/lib/sqLite \
	xbmc/lib/UnrarXLib \
	xbmc/linux \
	xbmc/screensavers \
	xbmc/utils \
	xbmc/visualizations \
	xbmc/xbox \

LIBS=@LIBS@
DEBUG_FLAGS=@DEBUG_FLAGS@
CFLAGS=@CFLAGS@
CXXFLAGS=@CXXFLAGS@
LDFLAGS=@LDFLAGS@
INCLUDES=@INCLUDES@

all : compile xbmc.bin xbmc-xrandr skin/Project\ Mayhem\ III/media/Textures.xpr;

include Makefile.include

.PHONY : guilib xbmc filesystem musicdatabase videodatabase cores paplayer dllloader exports xbox linux visualizations screensavers utils common tinyxml sqllite libscrobbler unrarxlib libpython libgoahead compile dvdplayer libupnp libcmyth eventclients librtmp papcodecs dvdcodecs imagelib

skin/Project\ Mayhem\ III/media/Textures.xpr: tools/XBMCTex/XBMCTex
	 @tools/XBMCTex/XBMCTex -input "\"skin/Project Mayhem III/media\"" -output "\"skin/Project Mayhem III\media\Textures.xpr\""

guilib: 
	$(MAKE) -C guilib
xbmc: 
	$(MAKE) -C xbmc
filesystem: 
	$(MAKE) -C xbmc/FileSystem
musicdatabase: 
	$(MAKE) -C xbmc/FileSystem/MusicDatabaseDirectory
videodatabase: 
	$(MAKE) -C xbmc/FileSystem/VideoDatabaseDirectory
cores: 
	$(MAKE) -C xbmc/cores
paplayer: 
	$(MAKE) -C xbmc/cores/paplayer
dllloader: exports
	$(MAKE) -C xbmc/cores/DllLoader
exports:
	$(MAKE) -C xbmc/cores/DllLoader/exports
	$(MAKE) -C xbmc/cores/DllLoader/exports/util
xbox: 
	$(MAKE) -C xbmc/xbox
linux: 
	$(MAKE) -C xbmc/linux
visualizations: 
	$(MAKE) -C xbmc/visualizations
screensavers: 
	$(MAKE) -C xbmc/screensavers
utils: 
	$(MAKE) -C xbmc/utils
common: 
	$(MAKE) -C guilib/common
tinyxml: 
	$(MAKE) -C guilib/tinyXML
sqllite: 
	$(MAKE) -C xbmc/lib/sqLite
libscrobbler: 
	$(MAKE) -C xbmc/lib/libscrobbler
unrarxlib: 
	$(MAKE) -C xbmc/lib/UnrarXLib
libpython: dllloader
	$(MAKE) -C xbmc/lib/libPython
	$(MAKE) -C xbmc/lib/libPython/xbmcmodule
	$(MAKE) -C xbmc/lib/libPython/linux
libgoahead: 
	$(MAKE) -C xbmc/lib/libGoAhead
libupnp: 
	$(MAKE) -C xbmc/lib/libUPnP
dvdplayer:
	$(MAKE) -C xbmc/cores/dvdplayer
	$(MAKE) -C xbmc/cores/VideoRenderers 
	$(MAKE) -C xbmc/cores/VideoRenderers/VideoShaders 
dvdcodecs: dllloader
	$(MAKE) -C xbmc/cores/dvdplayer/Codecs
cdrip:
	$(MAKE) -C xbmc/cdrip
libcmyth: dllloader 
	$(MAKE) -C xbmc/lib/libcmyth
eventclients:
	$(MAKE) -C tools/EventClients
librtmp:
	$(MAKE) -C xbmc/lib/libRTMP
libxbms:
	$(MAKE) -C xbmc/lib/libXBMS
libexif: dllloader
	$(MAKE) -C xbmc/lib/libexif
librtv:
	$(MAKE) -C xbmc/lib/libRTV
libxdaap:
	$(MAKE) -C xbmc/lib/libXDAAP
libass:
	$(MAKE) -C xbmc/lib/libass 
libhdhomerun:
	$(MAKE) -C xbmc/lib/libhdhomerun
libshout:
	$(MAKE) -C xbmc/lib/libshout
libid3tag: dllloader
	$(MAKE) -C xbmc/lib/libid3tag
papcodecs: dllloader linux dvdcodecs
	$(MAKE) -C xbmc/cores/paplayer/AACCodec
	$(MAKE) -C xbmc/cores/paplayer/AC3Codec
	$(MAKE) -C xbmc/cores/paplayer/ADPCMCodec
	$(MAKE) -C xbmc/cores/paplayer/CubeCodec
	$(MAKE) -C xbmc/cores/paplayer/DCACodec
	$(MAKE) -C xbmc/cores/paplayer/flac-1.2.1
	$(MAKE) -C xbmc/cores/paplayer/GYMCodec
	$(MAKE) -C xbmc/cores/paplayer/MACDll
ifneq ($(ARCH), x86_64-linux)
	$(MAKE) -C xbmc/cores/paplayer/ModuleCodec
	$(MAKE) -C xbmc/cores/paplayer/SPCCodec/SNES/SNESAPU	
endif
	$(MAKE) -C xbmc/cores/paplayer/MIDCodec
	$(MAKE) -C xbmc/cores/paplayer/MPCCodec
	$(MAKE) -C xbmc/cores/paplayer/MP3Codec
	$(MAKE) -C xbmc/cores/paplayer/NSFCodec
	$(MAKE) -C xbmc/cores/paplayer/SIDCodec
	$(MAKE) -C xbmc/cores/paplayer/vorbisfile
	$(MAKE) -C xbmc/cores/paplayer/WavPackCodec
	$(MAKE) -C xbmc/cores/paplayer/YMCodec/StSoundLibrary	
imagelib: dllloader
	$(MAKE) -C xbmc/lib/cximage-6.0

compile: guilib xbmc filesystem musicdatabase videodatabase cores paplayer dllloader exports xbox linux visualizations screensavers utils common tinyxml sqllite libscrobbler libgoahead unrarxlib libpython dvdplayer libupnp cdrip libcmyth librtmp libxbms libexif librtv libxdaap libass libhdhomerun libshout libid3tag papcodecs dvdcodecs imagelib

LIBS+=	\
	guilib/*.o \
	guilib/common/*.o \
	guilib/tinyXML/*.o \
	xbmc/*.o \
	xbmc/cdrip/*.o \
	xbmc/cores/*.o \
	xbmc/cores/DllLoader/*.o \
	xbmc/cores/DllLoader/exports/*.o \
	xbmc/cores/DllLoader/exports/util/*.o \
	xbmc/cores/dvdplayer/DVDPlayer.a \
	xbmc/cores/paplayer/*.o \
	xbmc/cores/VideoRenderers/*.o \
	xbmc/cores/VideoRenderers/VideoShaders/*.o \
	xbmc/FileSystem/*.o \
	xbmc/FileSystem/MusicDatabaseDirectory/*.o \
	xbmc/FileSystem/VideoDatabaseDirectory/*.o \
	xbmc/lib/libcdio/libcdio-@ARCH@.a \
	xbmc/lib/libcmyth/*.o \
	xbmc/lib/libGoAhead/libGoAhead-@ARCH@.a \
	xbmc/lib/libPython/*.o \
	xbmc/lib/libPython/xbmcmodule/*.o \
	xbmc/lib/libRTMP/*.o \
	xbmc/lib/libRTV/librtv-@ARCH@.a \
	xbmc/lib/libscrobbler/*.o \
	xbmc/lib/libshout/libshout-@ARCH@.a \
	xbmc/lib/libsmb/libsmbclient-@ARCH@.a \
	xbmc/lib/libUPnP/libupnp-@ARCH@.a \
	xbmc/lib/libXBMS/libxbms-@ARCH@.a \
	xbmc/lib/libXDAAP/libxdaap-@ARCH@.a \
	xbmc/lib/sqLite/*.o \
	xbmc/lib/UnrarXLib/*.o \
	xbmc/linux/*.o \
	xbmc/screensavers/*.o \
	xbmc/settings/*.o \
	xbmc/utils/*.o \
	xbmc/visualizations/*.o \
	xbmc/xbox/*.o \


xbmc.bin: compile $(wildcard $(OBJS) @(LIBS))
	g++ $(DEBUG_FLAGS) -o xbmc.bin  $(OBJS) $(LIBS) -rdynamic

xbmc-xrandr: xbmc-xrandr.c
	gcc -g -o xbmc-xrandr xbmc-xrandr.c -lXrandr -lXrender -lX11 

tools/XBMCTex/XBMCTex:
	$(MAKE) -C tools/XBMCTex/

install-bin: all # developement convenience target
	sudo cp xbmc.bin $(prefix)/share/xbmc

install: all install-datas install-web
	@echo "Copying XBMC binary to $(prefix)/share/xbmc/xbmc.bin"
	@cp xbmc.bin $(prefix)/share/xbmc/xbmc.bin
	@mkdir -p $(prefix)/bin
	@cp tools/Linux/xbmc.sh $(prefix)/bin/xbmc
	@chmod 755 $(prefix)/bin/xbmc
	@echo "Copying support and legal files,,,"
	@cp README.linux LICENSE.GPL *.txt xbmc-xrandr $(prefix)/share/xbmc/
	@echo "Done!"
	@echo "You can run XBMC with the command 'xbmc'"

install-datas: tools/XBMCTex/XBMCTex
	@echo "Creating target directories in $(prefix)/share/xbmc"
	@find language media screensavers scripts skin sounds userdata visualisations system -type d -not -iregex ".*svn.*" -exec mkdir -p $(prefix)/share/xbmc/"{}" \; -printf " -- %f                           \r"
	@echo "Copying system files to $(prefix)/share/xbmc"
	@# Arch independent files
	@find language media screensavers scripts sounds userdata visualisations system -regextype posix-extended -type f -not -iregex ".*svn.*|.*\.so|.*\.dll|.*win32\.vis|.*osx\.vis" -exec cp "{}" $(prefix)/share/xbmc/"{}" \; -printf " -- %f                           \r"
	@# Arch dependent files
	@find system -regextype posix-extended -type f -not -iregex ".*svn.*" -iregex ".*@ARCH@.*" -exec cp "{}" $(prefix)/share/xbmc/"{}" \; -printf " -- %f                           \r"
	@# PM3
	@find skin -regextype posix-extended -type f -not -iregex ".*svn.*|.*\.png|.*\.gif" -exec cp '{}' $(prefix)/share/xbmc/'{}' \; -printf " -- %f                            \r"

install-web:
	@mkdir -p $(prefix)/share/xbmc/web
	@unrar-free x -o+ web/Project_Mayem_III_webserver_v1.0.rar $(prefix)/share/xbmc/web

uninstall:
	@echo "Removing XBMC..."
	@rm -rf $(prefix)/share/xbmc $(prefix)/bin/xbmc
	@echo "Done!"

reallyclean:
	@echo " This will delete ALL unversioned files in"; \
	 echo " your XBMC source tree. If you aren't sure"; \
	 echo " you want to do this, answer anything but"; \
	 echo " 'Y' (case sensitive) to the following."; \
	 echo " DISCLAIMER: Team XBMC is NOT responsible"; \
	 echo " for ANYTHING lost if you execute this command!"; \
	 echo -n " Damnserious? (Y/*) "; \
	 read -n1 PROMPT; \
	 if [[ "$$PROMPT" = "Y" ]]; then \
		SVNV=$$(svnversion -n | cut -d':' -f1); _IFS=$$IFS; IFS=$$'\t\n'; \
		for i in `svn st --no-ignore | grep ^[I\?] | cut -d' ' -f7-`; \
			do echo "  Deleting $$i"; \
			rm -rf "$$i"; \
		done; \
		IFS=$$_IFS; \
		echo " Recovering any missing files."; \
		svn up -r $${SVNV/M/} | cut -d' ' -f7- | awk '{print "  "$$0}'; \
		echo " Done."; \
		echo " The following files may need reverted (svn revert <file>)"; \
		svn st | grep ^M | cut -d' ' -f7- | awk '{print "  "$$0}'; \
	 else \
	 	echo; \
	 fi

