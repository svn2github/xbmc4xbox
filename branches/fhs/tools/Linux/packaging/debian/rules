#!/usr/bin/make -f

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

# Get the SVN revision from the changelog
SVNVERSION ?= $(shell dpkg-parsechangelog | grep '^Version:' | grep svn | sed 's/.*svn\([[:digit:]]*\).*/\1/')

# Set this variable to yes for release builds to disable debugging and enable
# optimizations.
XBMC_RELEASE ?= no

# If not set already, try to set from debian/svnrevision
ifeq (,$(SVNVERSION))
	SVNVERSION = $(shell cat debian/svnrevision 2>/dev/null)
endif

# List of options to pass to configure. Can be overridden.
XBMC_CONFIG_OPTIONS ?= --host=$(DEB_HOST_GNU_TYPE) \
  --build=$(DEB_BUILD_GNU_TYPE) \
  --prefix=/usr --docdir=/usr/share/doc/xbmc \
  --enable-gl --enable-vdpau --disable-vaapi --disable-vdadecoder \
  --disable-profiling --enable-joystick --enable-xrandr --disable-ccache \
  --enable-pulse --disable-mid --enable-avahi --disable-asap-codec \
  --enable-webserver --disable-libdts --disable-liba52

# Whether we're building for release or not
ifeq (yes,$(XBMC_RELEASE))
  XBMC_CONFIG_OPTIONS += --disable-debug --enable-optimizations
else
  XBMC_CONFIG_OPTIONS += --enable-debug --disable-optimizations
endif

# Ubuntu or Debian specific options
ifeq (Ubuntu,$(shell lsb_release -is))
  XBMC_CONFIG_OPTIONS += --enable-faac --enable-crystalhd
else
  XBMC_CONFIG_OPTIONS += --enable-external-libraries --disable-dvdcss \
    --disable-non-free
endif

# Add the SVN revision if we could determine the svn revision
ifneq (,$(SVNVERSION))
  XBMC_CONFIG_OPTIONS += SVN_REV="$(SVNVERSION)"
endif

# Various environment variables to set
XBMC_CONFIG_OPTIONS += CFLAGS="$(DEB_CFLAGS)" CXXFLAGS="$(DEB_CXXFLAGS)"

# Input files used for generating other files
INPUT_FILES = debian/control.in

%:
	dh $@ --parallel

# Target for generating control files
.PHONY: debian/var_info
%.in: debian/var_info
	perl -p \
	-e 's{#BUILD_DEPENDS#}{qx(sh debian/var_info BUILD_DEPENDS)}ge;' \
	-e 's{#LIBCURL_DEPENDS#}{qx(sh debian/var_info LIBCURL_DEPENDS)}ge;' \
	-e 's{#XBMC_LIVE_DEPENDS#}{qx(sh debian/var_info XBMC_LIVE_DEPENDS)}ge;' \
	< $@ > $$(echo $@ | sed 's/\.in$$//')

override_dh_clean:
	dh_clean
	debian/rules $(INPUT_FILES)

override_dh_auto_configure: configure
	./configure $(XBMC_CONFIG_OPTIONS)

override_dh_auto_install:
	$(MAKE) install install-livedatas DESTDIR=$(CURDIR)/debian/tmp
	install -D -m 0644 $(CURDIR)/tools/XBMCLive/xbmc-live.conf \
	    $(CURDIR)/debian/tmp/etc/init/xbmc-live.conf
	$(MAKE) eventclients DESTDIR=$(CURDIR)/debian/tmp \
		WII_EXTRA_OPTS=-DCWIID_OLD

override_dh_install:
	dh_install --sourcedir=$(CURDIR)/debian/tmp -XLICENCE \
		-XLicence.txt -XLicense.txt -XLiberationSans-Regular.ttf \
		-XDejaVuSans.ttf -XDejaVuSans-Bold.ttf
	# Delete skins from xbmc-data package
	rm -rf debian/xbmc-data/usr/share/xbmc/addons/skin.*

override_dh_strip:
	dh_strip --dbg-package=xbmc-dbg

override_dh_makeshlibs:
	# We don't install shared libraries in standard locations so don't edit
	# postinst/postrm scripts to call ldconfig
	dh_makeshlibs -n

override_dh_gencontrol:
	dh_gencontrol
	# Need to manually add dependency for libcurl
	sed "s/^Depends:.*$$/&, $$(sh debian/var_info LIBCURL_DEPENDS)/" \
		-i "debian/xbmc-bin/DEBIAN/control"
