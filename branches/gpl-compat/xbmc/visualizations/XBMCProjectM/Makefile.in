ARCH=@ARCH@
INCLUDES=-I. -I.. -I../../linux -I../../ -I../../../guilib -I../../../visualisations
OBJS=Main.o
VIS_DIR=../../../visualisations
SLIB=$(VIS_DIR)/ProjectM.vis
CXXFLAGS=-O3 -g -fPIC
DIRS=libprojectM
PROJECTM_LIBS=libprojectM/NativePresetFactory/libNativePresetFactory.a \
	      libprojectM/MilkdropPresetFactory/libMilkdropPresetFactory.a \
	      libprojectM/Renderer/libRenderer.a \
	      libprojectM/libprojectM.a

ifeq ($(findstring osx,$(ARCH)), osx)
CXXFLAGS+=-fno-common 

$(SLIB): $(OBJS) libprojectM/libprojectM.dylib
	$(CXX) -bundle -shared -undefined suppress -flat_namespace $(CFLAGS) -o $(SLIB) \
		./libprojectM/CMakeFiles/projectM.dir/*.o \
		$(OBJS)
	../../../tools/Mach5/wrapper.rb $@;mv output.so $@

libprojectM/libprojectM.dylib:
	$(MAKE) -C libprojectM
else
$(SLIB): $(OBJS) $(PROJECTM_LIBS)
	$(CXX) -Wl,--whole-archive $(PROJECTM_LIBS) -Wl,--no-whole-archive -fPIC -shared $(CFLAGS) -o $(SLIB) $(OBJS) `cat ../../cores/DllLoader/exports/wrapper.def` ../../cores/DllLoader/exports/wrapper.o
	cp -rfT libprojectM/presets $(VIS_DIR)/projectM

$(PROJECTM_LIBS): libprojectM/libprojectM.so;
libprojectM/libprojectM.so:
	$(MAKE) -C libprojectM
endif

CLEAN_FILES = \
	libprojectM/libprojectM.so \
	libprojectM/libprojectM.so.2 \
	libprojectM/libprojectM.so.2.00

DISTCLEAN_FILES=	\
	libprojectM/CMakeFiles/ \
	libprojectM/CMakeCache.txt \
	libprojectM/Makefile \
	libprojectM/cmake_install.cmake \
	libprojectM/config.inp \
	libprojectM/libprojectM.pc \
	$(VIS_DIR)/projectM

include ../../../Makefile.include

