diff -NaurwB hts-tvheadend-2.10/src/htsp.c hts-tvheadend-2.10_patched/src/htsp.c
--- hts-tvheadend-2.10/src/htsp.c	2010-02-03 20:19:25.000000000 +0100
+++ hts-tvheadend-2.10_patched/src/htsp.c	2010-03-18 23:42:59.000000000 +0100
@@ -38,12 +38,14 @@
 #include "htsp.h"
 #include "streaming.h"
 #include "transports.h"
+#include "dvb/dvb.h"
 
 #include "htsmsg_binary.h"
 
 #include <sys/statvfs.h>
 #include "settings.h"
 #include <sys/time.h>
+#include <sys/ioctl.h>
 
 
 static void *htsp_server;
@@ -1399,6 +1401,47 @@
     htsmsg_add_u32(m, "Pdrops", hs->hs_dropstats[PKT_P_FRAME]);
     htsmsg_add_u32(m, "Idrops", hs->hs_dropstats[PKT_I_FRAME]);
 
+    if (hs->hs_s)
+    {
+      th_transport_t *t = hs->hs_s->ths_transport;
+      if (t && t->tht_type == TRANSPORT_DVB && t->tht_dvb_mux_instance->tdmi_adapter)
+      {
+        th_dvb_adapter_t *tda = t->tht_dvb_mux_instance->tdmi_adapter;
+        if (tda->tda_fe_fd > 0)
+        {
+          struct dvb_frontend_info value;
+          fe_status_t status;
+          uint16_t fe_snr;
+          uint16_t fe_signal;
+          uint32_t fe_ber;
+          uint32_t fe_unc;
+
+          memset(&value, 0, sizeof(value));
+          memset(&status, 0, sizeof(status));
+          ioctl(tda->tda_fe_fd, FE_GET_INFO, &value);
+          ioctl(tda->tda_fe_fd, FE_READ_STATUS, &status);
+
+          if (ioctl(tda->tda_fe_fd, FE_READ_SIGNAL_STRENGTH, &fe_signal) == -1)
+            fe_signal = -2;
+          if (ioctl(tda->tda_fe_fd, FE_READ_SNR, &fe_snr) == -1)
+            fe_snr = -2;
+          if (ioctl(tda->tda_fe_fd, FE_READ_BER, &fe_ber) == -1)
+            fe_ber = -2;
+          if (ioctl(tda->tda_fe_fd, FE_READ_UNCORRECTED_BLOCKS, &fe_unc) == -1)
+            fe_unc = -2;
+
+          char buf[2048];
+          snprintf(buf, sizeof(buf), "%s:%s:%s:%s:%s", (status & FE_HAS_LOCK) ? "LOCKED" : "-", (status & FE_HAS_SIGNAL) ? "SIGNAL" : "-", (status & FE_HAS_CARRIER) ? "CARRIER" : "-", (status & FE_HAS_VITERBI) ? "VITERBI" : "-", (status & FE_HAS_SYNC) ? "SYNC" : "-");
+          htsmsg_add_str(m, "feStatus", buf);
+          htsmsg_add_str(m, "feName", value.name);
+          htsmsg_add_u32(m, "feSNR", fe_snr);
+          htsmsg_add_u32(m, "feSignal", fe_signal);
+          htsmsg_add_u32(m, "feBER", fe_ber);
+          htsmsg_add_u32(m, "feUNC", fe_unc);
+        }
+      }
+    }
+
     /* We use a special queue for queue status message so they're not
        blocked by anything else */
 
